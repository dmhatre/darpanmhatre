{
  "name": "express-mongo-db",
  "version": "0.4.0",
  "description": "Mongodb connection middleware for express",
  "main": "index.js",
  "scripts": {
    "test": "istanbul test _mocha --report html -- test/*.js -R spec -t 1000",
    "coveralls": "istanbul cover ./node_modules/mocha/bin/_mocha --report lcovonly -- test/*.js -R spec -t 1000 && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js && rm -rf ./coverage"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/floatdrop/express-mongo-db"
  },
  "dependencies": {
    "connect-once": "~0.1.0"
  },
  "devDependencies": {
    "coveralls": "~2.6.0",
    "istanbul": "~0.1.44",
    "mocha": "~1.15.1",
    "mocha-lcov-reporter": "0.0.1",
    "mongodb": "^1.4.7",
    "should": "~3.0.1"
  },
  "keywords": [
    "mongodb",
    "express",
    "middleware"
  ],
  "author": {
    "name": "Vsevolod Strukchinsky"
  },
  "license": "MIT",
  "readme": "# express-mongo-db\n[![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Coverage Status][coveralls-image]][coveralls-url] [![Dependency Status][depstat-image]][depstat-url]\n> Connect once and memorize connection for next usages\n\nMiddleware that netowork-flaps and shit aware.\n\n## Usage\n\nFirst - install middleware in project:\n\n```npm i express-mongo-db mongodb --save```\n\nSecond - add middleware to express application:\n\n```javascript\nvar app = require('express')();\napp.use(require('express-mongo-db')(require('mongodb')));\n```\n\nNow you got `req.db` object of Mongodb database in every request handler.\n\n## API\n\n#### express-mongo-db(mongodb, [options])\n\nCreates middleware with passed mongodb module instance (this is useful for promisification).\n\n## Options\n\nYou can pass options to constructor of middleware function like this: `require('express-mongo-db')(options)` where `options` is an object with fields described below.\n\nAlso you can modify defaults value in `config` property of middleware contructor like this:\n\n```javascript\nvar mongodb = require('express-mongo-db');\nmongodb.config.readPreference = 'secondary';\n\nvar app = require('express')();\napp.use(mongodb(require('mongodb')));\n\napp.get('/', function(req, res) {\n    req.db.find(/* ... */);\n});\n\n```\n\n * `host` - server or replica string (default: `localhost`, but can be `server.one.com:123,server.two.com:456`)\n * `db` - name of database (default: `test`)\n * `options` - object, that passed to [MongoClient.connect](http://mongodb.github.io/node-mongodb-native/driver-articles/mongoclient.html#read-preference).\n * And all options from [connect-once](https://github.com/floatdrop/connect-once), such as `reconnectWait` and `heartbeat` function.\n\n\n## Events\n\nTo know what's up in your life, we provide event-emitter to listen to. For example - this is how you know, that reconnecton happening:\n\n```javascript\nvar mongodb = require('express-mongo-db')(require('mongodb'), options);\nmongodb.connection.on('reconnect', function(err) {\n    console.log(\"Reconnecting to mongo (\" + this.retries + \" retries left). \" + (err.stack ? err.stack : err));\n});\n```\n\nAlso you can subscribe on connection event:\n\n```javascript\nvar mongodb = require('express-mongo-db')(require('mongodb'), options);\nmongodb.connection.when('available', function(err, db) {\n\n});\n```\n\n`express-mongo-db` will start attempts to connect straight after require.\n\n[npm-url]: https://npmjs.org/package/express-mongo-db\n[npm-image]: https://badge.fury.io/js/express-mongo-db.png\n\n[travis-url]: http://travis-ci.org/floatdrop/express-mongo-db\n[travis-image]: https://travis-ci.org/floatdrop/express-mongo-db.png?branch=master\n\n[coveralls-url]: https://coveralls.io/r/floatdrop/express-mongo-db\n[coveralls-image]: https://coveralls.io/repos/floatdrop/express-mongo-db/badge.png\n\n[depstat-url]: https://david-dm.org/floatdrop/express-mongo-db\n[depstat-image]: https://david-dm.org/floatdrop/express-mongo-db.png?theme=shields.io\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/floatdrop/express-mongo-db/issues"
  },
  "homepage": "https://github.com/floatdrop/express-mongo-db",
  "_id": "express-mongo-db@0.4.0",
  "dist": {
    "shasum": "226f0f2586c91e16fdc53663b5da79f3b58a6274"
  },
  "_from": "express-mongo-db@~0.4.0",
  "_resolved": "https://registry.npmjs.org/express-mongo-db/-/express-mongo-db-0.4.0.tgz"
}
